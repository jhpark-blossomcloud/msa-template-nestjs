name: Deploy to Production

on:
#  push:
#    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Generate Version Code
        id: version
        run: echo "::set-output name=code::$(date +'%Y%m%d%H%M%S')"

      - name: Send Log to Discord
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          VERSION_CODE: ${{ steps.version.outputs.code }}
        with:
          args: '📦 [API] `{{ VERSION_CODE }}` 빌드를 시작합니다.'

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to Docker Registry
        uses: docker/login-action@v1
        with:
          registry: harbor.uoslife.com
          username: ${{ secrets.HARBOR_USERNAME }}
          password: ${{ secrets.HARBOR_ACCESS_TOKEN }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker Image
        run: |
          docker buildx build \
            --cache-from "type=local,src=/tmp/.buildx-cache" \
            --cache-to "type=local,dest=/tmp/.buildx-cache" \
            --platform linux/amd64 \
            --tag harbor.uoslife.com/uoslife/uoslife-template:latest \
            --tag harbor.uoslife.com/uoslife/uoslife-template:${{ steps.version.outputs.code }} \
            --target production \
            --build-arg APP_PORT=3000 \
            --push .

      - name: Send Log to Discord
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          VERSION_CODE: ${{ steps.version.outputs.code }}
        with:
          args: '🛫 [API] `{{ VERSION_CODE }}` 배포를 시작합니다.'

      - name: Deploy to cluster
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: set image -n uoslife-template --record deployment/uoslife-template uoslife-template=harbor.uoslife.com/uoslife/uoslife-template:${{ steps.version.outputs.code }}

      - name: Verify Deployment
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: rollout status -n uoslife-template deployment/uoslife-template

      - name: Send Success Log to Discord
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
          VERSION_CODE: ${{ steps.version.outputs.code }}
        with:
          args: '🍻 [API] `{{ VERSION_CODE }}` 배포가 완료되었습니다.'
